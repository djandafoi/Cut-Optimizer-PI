<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /8W2q3U5ssgAAAAASUVORK5CYII=
</value>
  </data>
</root>